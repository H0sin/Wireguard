name: dockercompose3146994774334740435
services:
  pgadmin:
    container_name: pgadmin
    depends_on:
      wireguarddb:
        condition: service_started
        required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aspnetrun.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5050"
        protocol: tcp
    restart: always
  rabbitmq:
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: hossein
      RABBITMQ_DEFAULT_USER: wireguard
    image: rabbitmq:3-management
    network_mode: host
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: rabbitmq_data
        target: /var/lib/rabbitmq
        volume: {}
  wg-dashboard:
    build:
      context: D:\Wireguard\Src
      dockerfile: wg-dashboard/Dockerfile
    depends_on:
      wireguard.api:
        condition: service_started
        required: true
    network_mode: host
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
  wireguard.api:
    build:
      context: D:\Wireguard\Src
      dockerfile: Services/Api/Wireguard.Api/Dockerfile
    cap_add:
      - NET_ADMIN
      - NET_RAW
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      wireguarddb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_HTTP_PORTS: "8000"
      DatabaseSettings__ConnectionString: Host=localhost;Port=5432;Database=WireguardDb;User Id=admin;Password=admin1234;
      EventBusSettings__HostAddress: amqp://wireguard:hossein@localhost:5672
    image: wireguard.api
    network_mode: host
    ports:
      - mode: ingress
        target: 8000
        published: "8000"
        protocol: tcp
    privileged: true
    restart: always
    user: root
    volumes:
      - type: bind
        source: /root/backup/wireguard/interfaces
        target: /etc/wireguard
        bind:
          create_host_path: true
      - type: bind
        source: /root/Wireguard/Src/Services/Api/Wireguard.Api/Imperat/rc.local
        target: /etc/rc.local
        bind:
          create_host_path: true
  wireguarddb:
    container_name: wireguarddb
    environment:
      POSTGRES_DB: WireguardDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    network_mode: host
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /root/backup/postgres/data
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose3146994774334740435_default
volumes:
  rabbitmq_data:
    name: dockercompose3146994774334740435_rabbitmq_data